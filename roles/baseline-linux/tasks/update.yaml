---
# Setup baseline Linux configurations
# File: roles/baseline-linux/tasks/update.yaml

- name: Update tasks for RedHat OS family
- block:
  - name: Check for updates using dnf
    block:
    - name: Check for available updates
      ansible.builtin.command:
        cmd: dnf check-update
      register: packages_avail
      failed_when: packages_avail.rc not in [ 0, 100 ]

    - name: Packages to update
      ansible.builtin.debug:
        var: packages_avail.stdout_lines
        verbosity: 0
    tags: [ new_vm, update, upgrade ]

  - name: Install updates using dnf
    block:
    - name: Install updates
      ansible.builtin.dnf:
        name: "*"
        state: latest
        update_cache: true
      register: packages_updated

    - name: Packages updated
      ansible.builtin.debug:
        var: packages_updated.results
    when: packages_avail.rc == 100
    tags: [ new_vm, update, upgrade ]

  - name: Reboot after installing updates
    ansible.builtin.reboot:
      msg: Rebooting after installing updates.
    when: packages_avail.rc == 100
    tags: [ update, upgrade ]

  - name: Upgrade Fedora to new release
    block:
      - name: Download upgrade packages
        ansible.builtin.expect:
          command: "dnf system-upgrade download --releasever={{ new_version }}"
          responses:
            "Before you continue": "y"
            "Is this ok": "y"
          timeout: 300
        register: packages_download

      - name: Start the upgrade
        ansible.builtin.command:
          cmd: dnf system-upgrade reboot
    when: ansible_distribution == 'Fedora'
    tags: [ upgrade ]
  when: ansible_os_family == 'RedHat'
