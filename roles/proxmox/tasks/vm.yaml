---
# Build and manage VMs using the Proxmox API


- name: Create new VM from template
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_id }}"
    api_token_secret: "{{ proxmox_api_secret }}"
    clone: "{{ proxmox_template_id }}"
    node: "{{ proxmox_node }}"
    newid: "{{ vm_newid }}"
    name: "{{ vm_hostname }}"
    description: "Created by Ansible on {{ ansible_date_time.iso8601 }}"
    timeout: 120
  tags: [ new_vm ]

- name: Pause 20 seconds to finish creating the VM
  ansible.builtin.pause:
    seconds: 20
  tags: [ new_vm ]

- name: Get VM status
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_id }}"
    api_token_secret: "{{ proxmox_api_secret }}"
    name: "{{ vm_hostname }}"
    node: "{{ proxmox_node }}"
    state: status
  register: vm_results
  tags: [ new_vm, start_vm, stop_vm ]

- name: Power on VM
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_id }}"
    api_token_secret: "{{ proxmox_api_secret }}"
    name: "{{ vm_hostname }}"
    node: "{{ proxmox_node }}"
    state: started
  when: vm_results.status == 'stopped'
  tags: [ new_vm, start_vm ]

- name: Power off VM
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_id }}"
    api_token_secret: "{{ proxmox_api_secret }}"
    name: "{{ vm_hostname }}"
    node: "{{ proxmox_node }}"
    state: stopped
  when: vm_results.status == 'started'
  tags: [ stop_vm ]
